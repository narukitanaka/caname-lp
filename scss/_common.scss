@use "variable" as v;
/*************************************************
common-style
*************************************************/
@mixin base_width {
  margin: 0 auto;
  width: 1100px;
}
// @extendでスタイルの継承
// @mixinでステイルの定義
// @includeでmixinの呼び出し

// ブレイクポイント
// PC基準でコーディングする場合
$breakpoints: (
  "sm": "screen and (max-width: 768px)",
  //スマホ
  "md": "screen and (max-width: 1000px)",
  //タブレット
  "ps": "screen and (max-width: 1200px)",
  //PC小
) !default;
@mixin mq($breakpoint: sm) {
  @media #{map-get($breakpoints , $breakpoint)} {
    @content;
  }
}

// スマホ基準でコーディングする場合
// $breakpoints: (
//   "md": "screen and (min-width: 600px)", //タブレット
//   "lg": "screen and (min-width: 1025px)", //パソコン
// ) !default;
// @mixin mq($breakpoint: lg) {
//   @media #{map-get($breakpoints , $breakpoint)} {
//     @content;
//   }
// }

@mixin flex($justify: 0, $align: 0, $wrap: 0, $wrap_align: 0) {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;

  // justify-content水平方向揃え（第一引数）
  @if $justify == start {
    // 左揃え
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  } @else if $justify == end {
    // 右揃え
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end;
  } @else if $justify == center {
    // 中央揃え
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
  } @else if $justify == between {
    // 両端配置
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  } @else if $justify == around {
    // 均等配置
    -webkit-justify-content: space-around;
    -ms-flex-pack: distribute;
    justify-content: space-around;
  }

  // align-items垂直方向揃え（第二引数）
  @if $align == start {
    // 上揃え
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
  } @else if $align == end {
    // 下揃え
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end;
  } @else if $align == center {
    // 中央揃え
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
  } @else if $align == baseline {
    // ベースライン
    -webkit-align-items: baseline;
    -ms-flex-align: baseline;
    align-items: baseline;
  } @else if $align == stretch {
    // 高さ揃え
    -webkit-align-items: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }

  // flex-wrap子要素の折り返し設定（第三引数）
  @if $wrap == nowrap {
    // 折り返ししない
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  } @else if $wrap == wrap {
    // 上から下
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  } @else if $wrap == reverse {
    // 下から上
    -webkit-flex-wrap: wrap-reverse;
    -ms-flex-wrap: wrap-reverse;
    flex-wrap: wrap-reverse;
  }

  // align-content複数行設定（第四引数）
  @if $wrap_align == start {
    // 上揃え
    -webkit-align-content: flex-start;
    -ms-flex-line-pack: start;
    align-content: flex-start;
  } @else if $wrap_align == end {
    // 下揃え
    -webkit-align-content: flex-end;
    -ms-flex-line-pack: end;
    align-content: flex-end;
  } @else if $wrap_align == center {
    // 中央揃え
    -webkit-align-content: center;
    -ms-flex-line-pack: center;
    align-content: center;
  } @else if $wrap_align == between {
    // 両端配置
    -webkit-align-content: space-between;
    -ms-flex-line-pack: justify;
    align-content: space-between;
  } @else if $wrap_align == around {
    // 均等配置
    -webkit-align-content: space-around;
    -ms-flex-line-pack: distribute;
    align-content: space-around;
  } @else if $wrap_align == stretch {
    // 高さ揃え
    -webkit-align-content: stretch;
    -ms-flex-line-pack: stretch;
    align-content: stretch;
  }
}

@mixin center($use-left: true, $use-top: true) {
  @if $use-left {
    left: 50%;
    transform: translateX(-50%);
  }
  @if $use-top {
    top: 50%;
    transform: translateY(-50%);
  }
  @if $use-left and $use-top {
    transform: translate(-50%, -50%);
  }
}

* {
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  font-family: "noto-sans-cjk-jp", "ヒラギノ角ゴ Pro W3",
    "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "游ゴシック", "Yu Gothic",
    "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;
  -webkit-font-smoothing: antialiased;
}

.img-box {
  img {
    width: 100%;
  }
}

.obj-fit {
  img {
    height: 100%;
    object-fit: cover;
    object-position: center;
  }
}

.flex {
  display: flex;
}

.inner {
  width: 100%;
  max-width: 1100px;
  margin: 0 auto;
  @include mq(md) {
    width: 80%;
    max-width: 1000px;
  }
  @include mq() {
    // width: 90%;
    width: v.pxtovw_sp(360);
    max-width: 750px;
  }
}
// .inner-wide {
//   width: 95%;
//   max-width: 136rem;
//   margin: 0 auto;
//   @include mq(md) {
//     width: 80%;
//     max-width: 1000px;
//   }
//   @include mq() {
//     width: 90%;
//     max-width: 750px;
//   }
// }

h3,
div,
p,
li,
dt,
dd,
th,
td,
a {
  font-size: 1.6rem;
  font-weight: 400;
  line-height: 1.4;
}

.h-scale {
  .img-box {
    overflow: hidden;
  }
  img {
    transition: all 0.3s;
  }
  &:hover {
    img {
      transform: scale(1.1);
    }
  }
}

.clearfix:after {
  content: "";
  display: block;
  clear: both;
}

.wrap-hidden {
  overflow: hidden;
  &.visible {
    overflow: visible;
  }
}

// /iOSでのデフォルトスタイルをリセット /
input[type="submit"],
input[type="button"] {
  border-radius: 0;
  -webkit-box-sizing: content-box;
  -webkit-appearance: button;
  appearance: button;
  border: none;
  box-sizing: border-box;
  &::-webkit-search-decoration {
    display: none;
  }
  &:focus {
    outline-offset: -2px;
  }
}

.wrap_cta {
  background: url(../images/cta_bg.png) no-repeat center/cover;
  padding: 7.5rem 0;
  @include mq() {
    overflow: hidden;
    padding: 6rem 0;
  }
  .box {
    position: relative;
    width: 118rem;
    margin: 0 auto;
    background-color: #fff;
    padding-bottom: 4rem;
    border: 3px solid;
    border-image: linear-gradient(to right, #f1cf70 50%, #0181cc 50%) 1;
    border-top: none;
    @include mq() {
      width: v.pxtovw_sp(360);
      padding-bottom: 2rem;
    }
    .head-wrap {
      padding: 5px 2.7rem;
      box-shadow: v.$shadow03;
      margin-bottom: 3rem;
      background: url(../images/cta_head-ttl_bg.svg) no-repeat center/cover;
      scale: 1.001;
      @include mq() {
        padding: 5px v.pxtovw_sp(10);
        margin-bottom: 14.3rem;
      }
      .logo {
        width: 60.8rem;
        @include mq() {
          width: v.pxtovw_sp(218);
        }
      }
    }
    .form {
      width: 51.6rem;
      margin-left: 9rem;
      margin-bottom: 2rem;
      @include mq() {
        width: v.pxtovw_sp(325);
        margin: 0 auto 2rem;
      }
      p {
        gap: 1rem;
        @include flex(center, center);
        font-size: 1.8rem;
        font-weight: 600;
        color: v.$sub-color05;
        margin-bottom: 1rem;
      }
      a {
        position: relative;
        width: 51.6rem;
        display: flex;
        @include flex(center, center);
        aspect-ratio: 1/0.14;
        font-size: 2rem;
        font-weight: 600;
        color: #fff;
        background: rgb(230, 0, 18);
        background: radial-gradient(
          circle,
          rgba(230, 0, 18, 1) 50%,
          rgba(160, 0, 12, 1) 100%
        );
        box-shadow: v.$shadow04;
        transition: all 0.3s;
        @include mq() {
          width: v.pxtovw_sp(325);
          width: 100%;
          aspect-ratio: 1/0.2;
        }
        &:hover {
          scale: 1.1;
        }
        svg {
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          right: 12rem;
        }
      }
    }
    .tel {
      position: relative;
      padding-left: 22rem;
      gap: 4rem;
      align-items: center;
      @include mq() {
        width: v.pxtovw_sp(325);
        flex-direction: column;
        padding-left: 0;
        gap: 1.5rem;
        margin: 0 auto;
      }
      &::before {
        content: "";
        position: absolute;
        left: 43rem;
        width: 0;
        height: 0;
        border-style: solid;
        border-top: 10px solid transparent;
        border-bottom: 10px solid transparent;
        border-left: 14px solid #7fc0e5;
        border-right: 0;
        @include mq() {
          left: 50%;
          transform: translateX(-50%);
          border-right: 10px solid transparent;
          border-left: 10px solid transparent;
          border-top: 7px solid #7fc0e5;
          border-bottom: 0;
          bottom: 4.7rem;
        }
      }
      p {
        font-size: 1.8rem;
        font-weight: 600;
      }
      .txt {
        color: v.$sub-color01;
        margin-bottom: 5px;
        @include mq() {
          font-size: 2rem;
          margin-bottom: 1rem;
        }
      }
      .time {
        color: v.$sub-color02;
        @include mq() {
          font-size: 1.4rem;
          text-align: center;
        }
        span {
          font-size: 1.4rem;
          border: 1.5px solid v.$sub-color02;
          padding: 0 5px;
          margin-right: 1rem;
        }
      }
      a {
        font-size: 4.7rem;
        font-weight: 600;
        transition: all 0.3s;
        @include mq() {
          font-size: 3.6rem;
        }
        &:hover {
          color: #0181cc;
          svg {
            path {
              fill: #0181cc;
            }
          }
        }
        svg {
          path {
            fill: #333;
            transition: all 0.3s;
          }
        }
      }
    }
    .message {
      .hukidashi {
        width: 33.6rem;
        position: absolute;
        top: 12rem;
        right: 20rem;
        z-index: 1;
        @include mq() {
          width: v.pxtovw_sp(162);
          top: 10rem;
          right: v.pxtovw_sp(180);
        }
      }
      .people {
        width: 35.8rem;
        position: absolute;
        bottom: 0;
        right: 0;
        @include mq() {
          width: v.pxtovw_sp(190);
          bottom: auto;
          top: 2rem;
        }
      }
    }
  }
}
